<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>安卓酒店预订系统</title>
    <url>/2020/02/18/%E5%AE%89%E5%8D%93%E9%85%92%E5%BA%97%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>最近做了一个安卓端的酒店预定系统，最繁琐的地方是酒店的预订功能，下面我介绍一下我做的，各位可以看一下，做得一般。</p>
<a id="more"></a>

<h3 id="界面效果"><a href="#界面效果" class="headerlink" title="界面效果"></a>界面效果</h3><p>预定界面<br><img src="/2020/02/18/%E5%AE%89%E5%8D%93%E9%85%92%E5%BA%97%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F/order.jpg" alt="预订界面"><br>选择日期<br><img src="/2020/02/18/%E5%AE%89%E5%8D%93%E9%85%92%E5%BA%97%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F/time.jpg" alt="选择日期"></p>
<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p>看下图预览<br><img src="/2020/02/18/%E5%AE%89%E5%8D%93%E9%85%92%E5%BA%97%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F/jiegou.jpg" alt="选择日期"><br>还有一张<br><img src="/2020/02/18/%E5%AE%89%E5%8D%93%E9%85%92%E5%BA%97%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F/s.jpg" alt="选择日期"></p>
<p>这是我做的一整个APP的代码结构，所以文件很多，下面我会粘上需要用到的文件的代码。<br><strong>我的预定页面用的是安卓自带的BottomNavigation</strong></p>
<h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><p>话不多说，上代码！！！</p>
<h4 id="fragment-dashboard-xml"><a href="#fragment-dashboard-xml" class="headerlink" title="fragment_dashboard.xml"></a>fragment_dashboard.xml</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private ImageButton back;</span><br><span class="line">   private TextView startTime;          &#x2F;&#x2F;开始时间</span><br><span class="line">   private TextView stopTime;           &#x2F;&#x2F;结束时间</span><br><span class="line"></span><br><span class="line">   private RecyclerView reycycler;</span><br><span class="line">   private MonthTimeAdapter adapter;</span><br><span class="line">   private ArrayList&lt;MonthTimeEntity&gt; datas;</span><br><span class="line"></span><br><span class="line">   private String startT;</span><br><span class="line">   private String stopT;</span><br><span class="line"></span><br><span class="line">   public static DayTimeEntity startDay;</span><br><span class="line">   public static DayTimeEntity stopDay;</span><br><span class="line"></span><br><span class="line">   public View onCreateView(@NonNull LayoutInflater inflater,</span><br><span class="line">                            ViewGroup container, Bundle savedInstanceState) &#123;</span><br><span class="line">       View root &#x3D; inflater.inflate(R.layout.fragment_dashboard, container, false);</span><br><span class="line"></span><br><span class="line">       startTime &#x3D; (TextView) root.findViewById(R.id.plan_time_txt_start);</span><br><span class="line">       stopTime &#x3D; (TextView) root.findViewById(R.id.plan_time_txt_stop);</span><br><span class="line"></span><br><span class="line">       reycycler &#x3D; (RecyclerView) root.findViewById(R.id.plan_time_calender);</span><br><span class="line">       LinearLayoutManager layoutManager &#x3D;</span><br><span class="line">               new LinearLayoutManager(getActivity(),   &#x2F;&#x2F; 上下文</span><br><span class="line">                       LinearLayout.VERTICAL,  &#x2F;&#x2F;垂直布局,</span><br><span class="line">                       false);</span><br><span class="line"></span><br><span class="line">       reycycler.setLayoutManager(layoutManager);</span><br><span class="line">       initView();</span><br><span class="line">       initData();</span><br><span class="line"></span><br><span class="line">       EventBus.getDefault().register(this);</span><br><span class="line"></span><br><span class="line">       Button confirm &#x3D; root.findViewById(R.id.button);</span><br><span class="line">       confirm.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">           @Override</span><br><span class="line">           public void onClick(View v) &#123;</span><br><span class="line">               Intent intent &#x3D; new Intent(getActivity(), select_room.class);</span><br><span class="line">               startT &#x3D; startTime.getText().toString();</span><br><span class="line">               startT &#x3D; startT.replaceAll(&quot;\n&quot;,&quot;&quot;);</span><br><span class="line">               stopT &#x3D; stopTime.getText().toString();</span><br><span class="line">               stopT &#x3D; stopT.replaceAll(&quot;\n&quot;,&quot;&quot;);</span><br><span class="line">               intent.putExtra(&quot;startTime&quot;,startT);</span><br><span class="line">               intent.putExtra(&quot;stopTime&quot;,stopT);</span><br><span class="line">               startActivity(intent);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       return root;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   private void initData() &#123;</span><br><span class="line">       startDay &#x3D; new DayTimeEntity(0,0,0,0);</span><br><span class="line">       stopDay &#x3D; new DayTimeEntity(-1,-1,-1,-1);</span><br><span class="line">       datas &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">       Calendar c &#x3D; Calendar.getInstance();</span><br><span class="line">       int year &#x3D; c.get(Calendar.YEAR);</span><br><span class="line">       int month &#x3D; c.get(Calendar.MONTH)+1;</span><br><span class="line"></span><br><span class="line">       c.add(Calendar.MONTH,1);</span><br><span class="line">       int nextYear &#x3D; c.get(Calendar.YEAR);</span><br><span class="line">       int nextMonth &#x3D; c.get(Calendar.MONTH)+1;</span><br><span class="line"></span><br><span class="line">       c.add(Calendar.MONTH,1);</span><br><span class="line">       int nextYear2 &#x3D; c.get(Calendar.YEAR);</span><br><span class="line">       int nextMonth2 &#x3D; c.get(Calendar.MONTH)+1;</span><br><span class="line"></span><br><span class="line">       datas.add(new MonthTimeEntity(year,month));                &#x2F;&#x2F;当前月份</span><br><span class="line">       datas.add(new MonthTimeEntity(nextYear,nextMonth));        &#x2F;&#x2F;下个月</span><br><span class="line">       datas.add(new MonthTimeEntity(nextYear2,nextMonth2));      &#x2F;&#x2F;下下个月</span><br><span class="line">       adapter &#x3D; new MonthTimeAdapter(datas,getActivity());</span><br><span class="line">       reycycler.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   private void initView() &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   public void onEventMainThread(UpdataCalendar event) &#123;</span><br><span class="line">       adapter.notifyDataSetChanged();</span><br><span class="line">       startTime.setText(startDay.getMonth()+&quot;月&quot;+startDay.getDay()+&quot;日&quot;+&quot;\n&quot;);</span><br><span class="line">       if (stopDay.getDay() &#x3D;&#x3D; -1) &#123;</span><br><span class="line">           stopTime.setText(&quot;退房&quot;+&quot;\n&quot;+&quot;日期&quot;);</span><br><span class="line">       &#125;else&#123;</span><br><span class="line">           stopTime.setText(stopDay.getMonth() + &quot;月&quot; + stopDay.getDay() + &quot;日&quot; + &quot;\n&quot;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line">   public void onDestroy() &#123;</span><br><span class="line">       super.onDestroy();</span><br><span class="line">       EventBus.getDefault().unregister(this);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h4 id="DayTimeEntity-java"><a href="#DayTimeEntity-java" class="headerlink" title="DayTimeEntity.java"></a>DayTimeEntity.java</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class DayTimeEntity &#123;</span><br><span class="line">    private int day ;           &#x2F;&#x2F;日期，几号</span><br><span class="line">    private int month;           &#x2F;&#x2F;属于的月份</span><br><span class="line">    private int year;           &#x2F;&#x2F;属于的年份</span><br><span class="line"></span><br><span class="line">    private int monthPosition;    &#x2F;&#x2F;属于的月份位置，注意是该日期属于的月份在外层列表中的position，不是月份</span><br><span class="line">    private int dayPosition;      &#x2F;&#x2F;属于的日期位置，注意是该日期在每个月（内层列表）中的位置</span><br><span class="line"></span><br><span class="line">    public DayTimeEntity(int day, int month, int year, int monthPosition) &#123;</span><br><span class="line">        this.day &#x3D; day;</span><br><span class="line">        this.month &#x3D; month;</span><br><span class="line">        this.year &#x3D; year;</span><br><span class="line">        this.monthPosition &#x3D; monthPosition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getDay() &#123;</span><br><span class="line">        return day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setDay(int day) &#123;</span><br><span class="line">        this.day &#x3D; day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getMonth() &#123;</span><br><span class="line">        return month;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setMonth(int month) &#123;</span><br><span class="line">        this.month &#x3D; month;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getYear() &#123;</span><br><span class="line">        return year;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setYear(int year) &#123;</span><br><span class="line"></span><br><span class="line">        this.year &#x3D; year;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getMonthPosition() &#123;</span><br><span class="line">        return monthPosition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setMonthPosition(int monthPosition) &#123;</span><br><span class="line">        this.monthPosition &#x3D; monthPosition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getDayPosition() &#123;</span><br><span class="line">        return dayPosition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setDayPosition(int dayPosition) &#123;</span><br><span class="line">        this.dayPosition &#x3D; dayPosition;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="MonthTimeEntity-java"><a href="#MonthTimeEntity-java" class="headerlink" title="MonthTimeEntity.java"></a>MonthTimeEntity.java</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class MonthTimeEntity &#123;</span><br><span class="line"></span><br><span class="line">    private int year;         &#x2F;&#x2F;该月份 属于哪一年</span><br><span class="line">    private int month;        &#x2F;&#x2F; 该月 是哪一个月份</span><br><span class="line"></span><br><span class="line">    public MonthTimeEntity(int year, int month) &#123;</span><br><span class="line">        this.year &#x3D; year;</span><br><span class="line">        this.month &#x3D; month;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getYear() &#123;</span><br><span class="line">        return year;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setYear(int year) &#123;</span><br><span class="line">        this.year &#x3D; year;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getMonth() &#123;</span><br><span class="line">        return month;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setMonth(int month) &#123;</span><br><span class="line">        this.month &#x3D; month;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="UpdataCalendar-java"><a href="#UpdataCalendar-java" class="headerlink" title="UpdataCalendar.java"></a>UpdataCalendar.java</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class UpdataCalendar &#123;</span><br><span class="line">    这个只要做出界面效果的话也不需要</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="DayTimeAdapter-java"><a href="#DayTimeAdapter-java" class="headerlink" title="DayTimeAdapter.java"></a>DayTimeAdapter.java</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class DayTimeAdapter extends RecyclerView.Adapter&lt;DayTimeViewHolder&gt;&#123;</span><br><span class="line"></span><br><span class="line">    private ArrayList&lt;DayTimeEntity&gt; days;</span><br><span class="line">    private Context context;</span><br><span class="line"></span><br><span class="line">    public DayTimeAdapter(ArrayList&lt;DayTimeEntity&gt; days, Context context) &#123;</span><br><span class="line">        this.days &#x3D; days;</span><br><span class="line">        this.context &#x3D; context;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public DayTimeViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123;</span><br><span class="line">        DayTimeViewHolder ret &#x3D; null;</span><br><span class="line">        &#x2F;&#x2F; 不需要检查是否复用，因为只要进入此方法，必然没有复用</span><br><span class="line">        &#x2F;&#x2F; 因为RecyclerView 通过Holder检查复用</span><br><span class="line">        View v &#x3D; LayoutInflater.from(context).inflate(R.layout.item_recycler_selectday, parent, false);</span><br><span class="line">        ret &#x3D; new DayTimeViewHolder(v);</span><br><span class="line"></span><br><span class="line">        return ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onBindViewHolder(final DayTimeViewHolder holder, final int position) &#123;</span><br><span class="line">        final DayTimeEntity dayTimeEntity &#x3D; days.get(position);</span><br><span class="line">        &#x2F;&#x2F;显示日期</span><br><span class="line">        if (dayTimeEntity.getDay()!&#x3D;0) &#123;</span><br><span class="line">            holder.select_txt_day.setText(dayTimeEntity.getDay() + &quot;&quot;);</span><br><span class="line">            holder.select_ly_day.setEnabled(true);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            holder.select_ly_day.setEnabled(false);</span><br><span class="line">        &#125;</span><br><span class="line">        holder.select_ly_day.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                if (DashboardFragment.startDay.getYear() &#x3D;&#x3D; 0 )&#123;          &#x2F;&#x2F; 第一次点击开始的位置，因为开始默认参数是 0,0,0,0</span><br><span class="line">                    DashboardFragment.startDay.setDay(dayTimeEntity.getDay());           &#x2F;&#x2F; 该item 天数的 年月日等信息  赋给  开始日期</span><br><span class="line">                    DashboardFragment.startDay.setMonth(dayTimeEntity.getMonth());</span><br><span class="line">                    DashboardFragment.startDay.setYear(dayTimeEntity.getYear());</span><br><span class="line">                    DashboardFragment.startDay.setMonthPosition(dayTimeEntity.getMonthPosition());</span><br><span class="line">                    DashboardFragment.startDay.setDayPosition(position);</span><br><span class="line">                &#125;else if(DashboardFragment.startDay.getYear()&gt;0 &amp;&amp; DashboardFragment.stopDay.getYear() &#x3D;&#x3D;-1)&#123;      &#x2F;&#x2F;已经点击了开始 ，点击结束位置，（默认结束位置-1,-1,-1,-1 说明还没有点击结束位置）</span><br><span class="line">                    if (dayTimeEntity.getYear()&gt; DashboardFragment.startDay.getYear()) &#123;</span><br><span class="line">                        &#x2F;&#x2F;如果选中的年份大于开始的年份，说明结束日期肯定大于开始日期 ，合法的 ，将该item的天数的 信息  赋给 结束日期</span><br><span class="line">                        DashboardFragment.stopDay.setDay(dayTimeEntity.getDay());</span><br><span class="line">                        DashboardFragment.stopDay.setMonth(dayTimeEntity.getMonth());</span><br><span class="line">                        DashboardFragment.stopDay.setYear(dayTimeEntity.getYear());</span><br><span class="line">                        DashboardFragment.stopDay.setMonthPosition(dayTimeEntity.getMonthPosition());</span><br><span class="line">                        DashboardFragment.stopDay.setDayPosition(position);</span><br><span class="line">                    &#125;else if (dayTimeEntity.getYear() &#x3D;&#x3D; DashboardFragment.startDay.getYear())&#123;</span><br><span class="line">                        &#x2F;&#x2F;如果选中的年份 等于 选中的年份</span><br><span class="line">                        if (dayTimeEntity.getMonth()&gt; DashboardFragment.startDay.getMonth())&#123;</span><br><span class="line">                            &#x2F;&#x2F;如果改item的天数的月份大于开始日期的月份，说明结束日期肯定大于开始日期 ，合法的 ，将该item的天数的 信息  赋给 结束日期</span><br><span class="line">                            DashboardFragment.stopDay.setDay(dayTimeEntity.getDay());</span><br><span class="line">                            DashboardFragment.stopDay.setMonth(dayTimeEntity.getMonth());</span><br><span class="line">                            DashboardFragment.stopDay.setYear(dayTimeEntity.getYear());</span><br><span class="line">                            DashboardFragment.stopDay.setMonthPosition(dayTimeEntity.getMonthPosition());</span><br><span class="line">                            DashboardFragment.stopDay.setDayPosition(position);</span><br><span class="line">                        &#125;else if(dayTimeEntity.getMonth() &#x3D;&#x3D; DashboardFragment.startDay.getMonth())&#123;</span><br><span class="line">                            &#x2F;&#x2F;年份月份 都相等</span><br><span class="line">                            if (dayTimeEntity.getDay() &gt;&#x3D; DashboardFragment.startDay.getDay())&#123;</span><br><span class="line">                                &#x2F;&#x2F;判断天数 ，如果 该item的天数的 日子大于等于 开始日期的 日子 ，说明结束日期合法的 ，将该item的天数的 信息  赋给 结束日期</span><br><span class="line">                                DashboardFragment.stopDay.setDay(dayTimeEntity.getDay());</span><br><span class="line">                                DashboardFragment.stopDay.setMonth(dayTimeEntity.getMonth());</span><br><span class="line">                                DashboardFragment.stopDay.setYear(dayTimeEntity.getYear());</span><br><span class="line">                                DashboardFragment.stopDay.setMonthPosition(dayTimeEntity.getMonthPosition());</span><br><span class="line">                                DashboardFragment.stopDay.setDayPosition(position);</span><br><span class="line">                            &#125;else&#123;</span><br><span class="line">                                &#x2F;&#x2F;天数小与初始  从新选择开始  ，结束日期重置，开始日期为当前的位置的天数的信息</span><br><span class="line">                                DashboardFragment.startDay.setDay(dayTimeEntity.getDay());</span><br><span class="line">                                DashboardFragment.startDay.setMonth(dayTimeEntity.getMonth());</span><br><span class="line">                                DashboardFragment.startDay.setYear(dayTimeEntity.getYear());</span><br><span class="line">                                DashboardFragment.startDay.setMonthPosition(dayTimeEntity.getMonthPosition());</span><br><span class="line">                                DashboardFragment.startDay.setDayPosition(position);</span><br><span class="line">                                DashboardFragment.stopDay.setDay(-1);</span><br><span class="line">                                DashboardFragment.stopDay.setMonth(-1);</span><br><span class="line">                                DashboardFragment.stopDay.setYear(-1);</span><br><span class="line">                                DashboardFragment.stopDay.setMonthPosition(-1);</span><br><span class="line">                                DashboardFragment.stopDay.setDayPosition(-1);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;else &#123;</span><br><span class="line">                            &#x2F;&#x2F;选中的月份 比开始日期的月份还小，说明 结束位置不合法，结束日期重置，开始日期为当前的位置的天数的信息</span><br><span class="line">                            DashboardFragment.startDay.setDay(dayTimeEntity.getDay());</span><br><span class="line">                            DashboardFragment.startDay.setMonth(dayTimeEntity.getMonth());</span><br><span class="line">                            DashboardFragment.startDay.setYear(dayTimeEntity.getYear());</span><br><span class="line">                            DashboardFragment.startDay.setMonthPosition(dayTimeEntity.getMonthPosition());</span><br><span class="line">                            DashboardFragment.startDay.setDayPosition(position);</span><br><span class="line">                            DashboardFragment.stopDay.setDay(-1);</span><br><span class="line">                            DashboardFragment.stopDay.setMonth(-1);</span><br><span class="line">                            DashboardFragment.stopDay.setYear(-1);</span><br><span class="line">                            DashboardFragment.stopDay.setMonthPosition(-1);</span><br><span class="line">                            DashboardFragment.stopDay.setDayPosition(-1);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        &#x2F;&#x2F;选中的年份 比开始日期的年份还小，说明 结束位置不合法，结束日期重置，开始日期为当前的位置的天数的信息</span><br><span class="line">                        DashboardFragment.startDay.setDay(dayTimeEntity.getDay());</span><br><span class="line">                        DashboardFragment.startDay.setMonth(dayTimeEntity.getMonth());</span><br><span class="line">                        DashboardFragment.startDay.setYear(dayTimeEntity.getYear());</span><br><span class="line">                        DashboardFragment.startDay.setMonthPosition(dayTimeEntity.getMonthPosition());</span><br><span class="line">                        DashboardFragment.startDay.setDayPosition(position);</span><br><span class="line">                        DashboardFragment.stopDay.setDay(-1);</span><br><span class="line">                        DashboardFragment.stopDay.setMonth(-1);</span><br><span class="line">                        DashboardFragment.stopDay.setYear(-1);</span><br><span class="line">                        DashboardFragment.stopDay.setMonthPosition(-1);</span><br><span class="line">                        DashboardFragment.stopDay.setDayPosition(-1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;else if(DashboardFragment.startDay.getYear()&gt;0 &amp;&amp; DashboardFragment.startDay.getYear()&gt;1)&#123;      &#x2F;&#x2F;已经点击开始和结束   第三次点击 ，重新点击开始</span><br><span class="line">                    DashboardFragment.startDay.setDay(dayTimeEntity.getDay());</span><br><span class="line">                    DashboardFragment.startDay.setMonth(dayTimeEntity.getMonth());</span><br><span class="line">                    DashboardFragment.startDay.setYear(dayTimeEntity.getYear());</span><br><span class="line">                    DashboardFragment.startDay.setMonthPosition(dayTimeEntity.getMonthPosition());</span><br><span class="line">                    DashboardFragment.startDay.setDayPosition(position);</span><br><span class="line">                    DashboardFragment.stopDay.setDay(-1);</span><br><span class="line">                    DashboardFragment.stopDay.setMonth(-1);</span><br><span class="line">                    DashboardFragment.stopDay.setYear(-1);</span><br><span class="line">                    DashboardFragment.stopDay.setMonthPosition(-1);</span><br><span class="line">                    DashboardFragment.stopDay.setDayPosition(-1);</span><br><span class="line">                &#125;</span><br><span class="line">                EventBus.getDefault().post(new UpdataCalendar()); &#x2F;&#x2F; 发消息刷新适配器，目的为了显示日历上各个日期的背景颜色</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        if (DashboardFragment.startDay.getYear()&#x3D;&#x3D; dayTimeEntity.getYear() &amp;&amp; DashboardFragment.startDay.getMonth() &#x3D;&#x3D; dayTimeEntity.getMonth() &amp;&amp; DashboardFragment.startDay.getDay() &#x3D;&#x3D; dayTimeEntity.getDay()</span><br><span class="line">                &amp;&amp; DashboardFragment.stopDay.getYear()&#x3D;&#x3D; dayTimeEntity.getYear() &amp;&amp; DashboardFragment.stopDay.getMonth() &#x3D;&#x3D; dayTimeEntity.getMonth() &amp;&amp; DashboardFragment.stopDay.getDay() &#x3D;&#x3D; dayTimeEntity.getDay() )&#123;</span><br><span class="line">            &#x2F;&#x2F;开始和结束同一天</span><br><span class="line">            holder.select_ly_day.setBackgroundResource(R.drawable.bg_time_startstop);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        else if (DashboardFragment.startDay.getYear()&#x3D;&#x3D; dayTimeEntity.getYear() &amp;&amp; DashboardFragment.startDay.getMonth() &#x3D;&#x3D; dayTimeEntity.getMonth() &amp;&amp; DashboardFragment.startDay.getDay() &#x3D;&#x3D; dayTimeEntity.getDay())&#123;</span><br><span class="line">            &#x2F;&#x2F;该item是 开始日期</span><br><span class="line">            holder.select_ly_day.setBackgroundResource(R.drawable.bg_time_start);</span><br><span class="line">        &#125;else if(DashboardFragment.stopDay.getYear()&#x3D;&#x3D; dayTimeEntity.getYear() &amp;&amp; DashboardFragment.stopDay.getMonth() &#x3D;&#x3D; dayTimeEntity.getMonth() &amp;&amp; DashboardFragment.stopDay.getDay() &#x3D;&#x3D; dayTimeEntity.getDay())&#123;</span><br><span class="line">            &#x2F;&#x2F;该item是 结束日期</span><br><span class="line">            holder.select_ly_day.setBackgroundResource(R.drawable.bg_time_stop);</span><br><span class="line">        &#125;else if(dayTimeEntity.getMonthPosition()&gt;&#x3D; DashboardFragment.startDay.getMonthPosition() &amp;&amp; dayTimeEntity.getMonthPosition()&lt;&#x3D; DashboardFragment.stopDay.getMonthPosition())&#123;</span><br><span class="line">            &#x2F;&#x2F;处于开始和结束之间的点</span><br><span class="line">            if (dayTimeEntity.getMonthPosition()&#x3D;&#x3D; DashboardFragment.startDay.getMonthPosition()&amp;&amp; dayTimeEntity.getMonthPosition()&#x3D;&#x3D; DashboardFragment.stopDay.getMonthPosition())&#123;</span><br><span class="line">                &#x2F;&#x2F;开始和结束是一个月份</span><br><span class="line">                if (dayTimeEntity.getDay()&gt; DashboardFragment.startDay.getDay() &amp;&amp; dayTimeEntity.getDay() &lt; DashboardFragment.stopDay.getDay()) &#123;</span><br><span class="line">                    holder.select_ly_day.setBackgroundResource(R.color.blue);</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    holder.select_ly_day.setBackgroundResource(R.color.white);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;else if(DashboardFragment.startDay.getMonthPosition() !&#x3D; DashboardFragment.stopDay.getMonthPosition())&#123;</span><br><span class="line">                &#x2F;&#x2F; 日期和 开始 不是一个月份</span><br><span class="line">                if (dayTimeEntity.getMonthPosition()&#x3D;&#x3D; DashboardFragment.startDay.getMonthPosition() &amp;&amp; dayTimeEntity.getDay()&gt; DashboardFragment.startDay.getDay())&#123;</span><br><span class="line">                    &#x2F;&#x2F;和初始相同月  天数往后</span><br><span class="line">                    holder.select_ly_day.setBackgroundResource(R.color.blue);</span><br><span class="line">                &#125;else if(dayTimeEntity.getMonthPosition()&#x3D;&#x3D; DashboardFragment.stopDay.getMonthPosition() &amp;&amp; dayTimeEntity.getDay()&lt; DashboardFragment.stopDay.getDay())&#123;</span><br><span class="line">                    &#x2F;&#x2F;和结束相同月   天数往前</span><br><span class="line">                    holder.select_ly_day.setBackgroundResource(R.color.blue);</span><br><span class="line">                &#125;else if(dayTimeEntity.getMonthPosition()!&#x3D; DashboardFragment.startDay.getMonthPosition() &amp;&amp; dayTimeEntity.getMonthPosition()!&#x3D; DashboardFragment.stopDay.getMonthPosition())&#123;</span><br><span class="line">                    &#x2F;&#x2F;和 开始结束都不是同一个月</span><br><span class="line">                    holder.select_ly_day.setBackgroundResource(R.color.blue);</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    holder.select_ly_day.setBackgroundResource(R.color.white);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            holder.select_ly_day.setBackgroundResource(R.color.white);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int getItemCount() &#123;</span><br><span class="line">        int ret &#x3D; 0;</span><br><span class="line">        if (days!&#x3D;null)&#123;</span><br><span class="line">            ret &#x3D; days.size();</span><br><span class="line">        &#125;</span><br><span class="line">        return ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="DayTimeViewHolder-java"><a href="#DayTimeViewHolder-java" class="headerlink" title="DayTimeViewHolder.java"></a>DayTimeViewHolder.java</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class DayTimeViewHolder extends RecyclerView.ViewHolder&#123;</span><br><span class="line"></span><br><span class="line">    public TextView select_txt_day;      &#x2F;&#x2F;日期文本</span><br><span class="line">    public LinearLayout select_ly_day;       &#x2F;&#x2F;父容器 ， 用于点击日期</span><br><span class="line"></span><br><span class="line">    public DayTimeViewHolder(View itemView) &#123;</span><br><span class="line">        super(itemView);</span><br><span class="line">        select_ly_day &#x3D; (LinearLayout) itemView.findViewById(R.id.select_ly_day);</span><br><span class="line">        select_txt_day &#x3D; (TextView) itemView.findViewById(R.id.select_txt_day);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="DashboardFragment-java"><a href="#DashboardFragment-java" class="headerlink" title="DashboardFragment.java"></a>DashboardFragment.java</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class DashboardFragment extends Fragment &#123;</span><br><span class="line"></span><br><span class="line">    private ImageButton back;</span><br><span class="line">    private TextView startTime;          &#x2F;&#x2F;开始时间</span><br><span class="line">    private TextView stopTime;           &#x2F;&#x2F;结束时间</span><br><span class="line"></span><br><span class="line">    private RecyclerView reycycler;</span><br><span class="line">    private MonthTimeAdapter adapter;</span><br><span class="line">    private ArrayList&lt;MonthTimeEntity&gt; datas;</span><br><span class="line"></span><br><span class="line">    private String startT;</span><br><span class="line">    private String stopT;</span><br><span class="line"></span><br><span class="line">    public static DayTimeEntity startDay;</span><br><span class="line">    public static DayTimeEntity stopDay;</span><br><span class="line"></span><br><span class="line">    public View onCreateView(@NonNull LayoutInflater inflater,</span><br><span class="line">                             ViewGroup container, Bundle savedInstanceState) &#123;</span><br><span class="line">        View root &#x3D; inflater.inflate(R.layout.fragment_dashboard, container, false);</span><br><span class="line"></span><br><span class="line">        startTime &#x3D; (TextView) root.findViewById(R.id.plan_time_txt_start);</span><br><span class="line">        stopTime &#x3D; (TextView) root.findViewById(R.id.plan_time_txt_stop);</span><br><span class="line"></span><br><span class="line">        reycycler &#x3D; (RecyclerView) root.findViewById(R.id.plan_time_calender);</span><br><span class="line">        LinearLayoutManager layoutManager &#x3D;</span><br><span class="line">                new LinearLayoutManager(getActivity(),   &#x2F;&#x2F; 上下文</span><br><span class="line">                        LinearLayout.VERTICAL,  &#x2F;&#x2F;垂直布局,</span><br><span class="line">                        false);</span><br><span class="line"></span><br><span class="line">        reycycler.setLayoutManager(layoutManager);</span><br><span class="line">        initView();</span><br><span class="line">        initData();</span><br><span class="line"></span><br><span class="line">        EventBus.getDefault().register(this);</span><br><span class="line"></span><br><span class="line">        Button confirm &#x3D; root.findViewById(R.id.button);</span><br><span class="line">        confirm.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                Intent intent &#x3D; new Intent(getActivity(), select_room.class);</span><br><span class="line">                startT &#x3D; startTime.getText().toString();</span><br><span class="line">                startT &#x3D; startT.replaceAll(&quot;\n&quot;,&quot;&quot;);</span><br><span class="line">                stopT &#x3D; stopTime.getText().toString();</span><br><span class="line">                stopT &#x3D; stopT.replaceAll(&quot;\n&quot;,&quot;&quot;);</span><br><span class="line">                intent.putExtra(&quot;startTime&quot;,startT);</span><br><span class="line">                intent.putExtra(&quot;stopTime&quot;,stopT);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        return root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void initData() &#123;</span><br><span class="line">        startDay &#x3D; new DayTimeEntity(0,0,0,0);</span><br><span class="line">        stopDay &#x3D; new DayTimeEntity(-1,-1,-1,-1);</span><br><span class="line">        datas &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Calendar c &#x3D; Calendar.getInstance();</span><br><span class="line">        int year &#x3D; c.get(Calendar.YEAR);</span><br><span class="line">        int month &#x3D; c.get(Calendar.MONTH)+1;</span><br><span class="line"></span><br><span class="line">        c.add(Calendar.MONTH,1);</span><br><span class="line">        int nextYear &#x3D; c.get(Calendar.YEAR);</span><br><span class="line">        int nextMonth &#x3D; c.get(Calendar.MONTH)+1;</span><br><span class="line"></span><br><span class="line">        c.add(Calendar.MONTH,1);</span><br><span class="line">        int nextYear2 &#x3D; c.get(Calendar.YEAR);</span><br><span class="line">        int nextMonth2 &#x3D; c.get(Calendar.MONTH)+1;</span><br><span class="line"></span><br><span class="line">        datas.add(new MonthTimeEntity(year,month));                &#x2F;&#x2F;当前月份</span><br><span class="line">        datas.add(new MonthTimeEntity(nextYear,nextMonth));        &#x2F;&#x2F;下个月</span><br><span class="line">        datas.add(new MonthTimeEntity(nextYear2,nextMonth2));      &#x2F;&#x2F;下下个月</span><br><span class="line">        adapter &#x3D; new MonthTimeAdapter(datas,getActivity());</span><br><span class="line">        reycycler.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void initView() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void onEventMainThread(UpdataCalendar event) &#123;</span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">        startTime.setText(startDay.getMonth()+&quot;月&quot;+startDay.getDay()+&quot;日&quot;+&quot;\n&quot;);</span><br><span class="line">        if (stopDay.getDay() &#x3D;&#x3D; -1) &#123;</span><br><span class="line">            stopTime.setText(&quot;退房&quot;+&quot;\n&quot;+&quot;日期&quot;);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            stopTime.setText(stopDay.getMonth() + &quot;月&quot; + stopDay.getDay() + &quot;日&quot; + &quot;\n&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onDestroy() &#123;</span><br><span class="line">        super.onDestroy();</span><br><span class="line">        EventBus.getDefault().unregister(this);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="MonthTimeAdapter"><a href="#MonthTimeAdapter" class="headerlink" title="MonthTimeAdapter"></a>MonthTimeAdapter</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class MonthTimeAdapter extends RecyclerView.Adapter&lt;MonthTimeViewHolder&gt;&#123;</span><br><span class="line"></span><br><span class="line">    private ArrayList&lt;MonthTimeEntity&gt; datas;</span><br><span class="line">    private Context context;</span><br><span class="line"></span><br><span class="line">    public MonthTimeAdapter(ArrayList&lt;MonthTimeEntity&gt; datas, Context context) &#123;</span><br><span class="line">        this.datas &#x3D; datas;</span><br><span class="line">        this.context &#x3D; context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public MonthTimeViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123;</span><br><span class="line">        MonthTimeViewHolder ret &#x3D; null;</span><br><span class="line">        &#x2F;&#x2F; 不需要检查是否复用，因为只要进入此方法，必然没有复用</span><br><span class="line">        &#x2F;&#x2F; 因为RecyclerView 通过Holder检查复用</span><br><span class="line">        View v &#x3D; LayoutInflater.from(context).inflate(R.layout.item_recycler_timeplan, parent, false);</span><br><span class="line">        ret &#x3D; new MonthTimeViewHolder(v,context);</span><br><span class="line">        return ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onBindViewHolder(MonthTimeViewHolder holder, int position) &#123;</span><br><span class="line">        MonthTimeEntity monthTimeEntity &#x3D; datas.get(position);</span><br><span class="line">        holder.plan_time_txt_month.setText(monthTimeEntity.getYear()+&quot;--&quot;+ monthTimeEntity.getMonth());  &#x2F;&#x2F;显示 几年--几月</span><br><span class="line">        &#x2F;&#x2F;得到该月份的第一天</span><br><span class="line">        Calendar calendar &#x3D; Calendar.getInstance();</span><br><span class="line">        calendar.set(Calendar.YEAR, monthTimeEntity.getYear());          &#x2F;&#x2F;指定年份</span><br><span class="line">        calendar.set(Calendar.MONTH, monthTimeEntity.getMonth() - 1);        &#x2F;&#x2F;指定月份 Java月份从0开始算</span><br><span class="line">        calendar.set(Calendar.DAY_OF_MONTH,1);                           &#x2F;&#x2F; 指定天数 ，这三行是为了得到 这一年这一月的第一天</span><br><span class="line"></span><br><span class="line">        int dayOfWeek &#x3D; calendar.get(Calendar.DAY_OF_WEEK);             &#x2F;&#x2F;得到该月份第一天 是星期几</span><br><span class="line">        ArrayList&lt;DayTimeEntity&gt; days &#x3D; new ArrayList&lt;DayTimeEntity&gt;();</span><br><span class="line">        for (int i &#x3D; 0; i &lt; dayOfWeek-1; i++) &#123;                          &#x2F;&#x2F;</span><br><span class="line">            days.add(new DayTimeEntity(0, monthTimeEntity.getMonth(), monthTimeEntity.getYear(),position));</span><br><span class="line">        &#125;</span><br><span class="line">        calendar.add(Calendar.MONTH, 1);&#x2F;&#x2F; 加一个月，变为下月的1号</span><br><span class="line">        calendar.add(Calendar.DATE, -1);&#x2F;&#x2F; 减去一天，变为当月最后一天</span><br><span class="line">        for (int i &#x3D; 1; i &lt;&#x3D; calendar.get(Calendar.DAY_OF_MONTH); i++) &#123;     &#x2F;&#x2F;添加 该月份的天数   一号 到 该月的最后一天</span><br><span class="line">            days.add(new DayTimeEntity(i, monthTimeEntity.getMonth(), monthTimeEntity.getYear(),position));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        DayTimeAdapter adapter &#x3D; new DayTimeAdapter(days,context);</span><br><span class="line">        holder.plan_time_recycler_content.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int getItemCount() &#123;</span><br><span class="line">        int ret &#x3D; 0;</span><br><span class="line">        if (datas!&#x3D;null)&#123;</span><br><span class="line">            ret &#x3D; datas.size();</span><br><span class="line">        &#125;</span><br><span class="line">        return ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="MonTimeViewHolder"><a href="#MonTimeViewHolder" class="headerlink" title="MonTimeViewHolder"></a>MonTimeViewHolder</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class MonthTimeViewHolder extends RecyclerView.ViewHolder&#123;</span><br><span class="line"></span><br><span class="line">    public TextView plan_time_txt_month;                         &#x2F;&#x2F;文本 2020-2</span><br><span class="line">    public RecyclerView plan_time_recycler_content ;            &#x2F;&#x2F;月份里面详细日期的列表</span><br><span class="line">    public Context context;                                        &#x2F;&#x2F;上下文</span><br><span class="line"></span><br><span class="line">    public MonthTimeViewHolder(View itemView, Context context) &#123;</span><br><span class="line">        super(itemView);</span><br><span class="line">        this.context &#x3D; context;</span><br><span class="line">        plan_time_recycler_content &#x3D; (RecyclerView) itemView.findViewById(R.id.plan_time_recycler_content);</span><br><span class="line">        plan_time_txt_month &#x3D; (TextView) itemView.findViewById(R.id.plan_time_txt_month);</span><br><span class="line"></span><br><span class="line">        RecyclerView.LayoutManager layoutManager &#x3D;</span><br><span class="line">                new GridLayoutManager(context,</span><br><span class="line">                        7,  &#x2F;&#x2F; 每行显示item项数目</span><br><span class="line">                        GridLayoutManager.VERTICAL, &#x2F;&#x2F;水平排列</span><br><span class="line">                        false</span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">        plan_time_recycler_content.setLayoutManager(layoutManager);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h3><p>欢迎点击下载源码——&gt; <a href="https://github.com/sunsichao123/androidHotelApp" target="_blank" rel="noopener">源码下载</a></p>
]]></content>
      <categories>
        <category>安卓</category>
      </categories>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo中next主题下创建标签问题Cannot GET /tags/%20/</title>
    <url>/2020/02/18/hexo%E4%B8%ADnext%E4%B8%BB%E9%A2%98%E4%B8%8B%E5%88%9B%E5%BB%BA%E6%A0%87%E7%AD%BE%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>今天hexo启用标签和分类功能的时候出现了一个很奇怪的bug，也就是标题中的bug，下面我写一下我是怎么解决的。</p>
<a id="more"></a>

<p>大家都知道%20是空格的意思吧，把根目录的配置文件里||之前的空格全部删掉就好了。<br><img src="/2020/02/18/hexo%E4%B8%ADnext%E4%B8%BB%E9%A2%98%E4%B8%8B%E5%88%9B%E5%BB%BA%E6%A0%87%E7%AD%BE%E9%97%AE%E9%A2%98/1.jpg" alt="改过之后的图片"></p>
<p>这个bug是next主题自带的bug。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Future</title>
    <url>/2020/02/16/firstday/</url>
    <content><![CDATA[<p>今天是这个博客存在的第一天，以后我会日渐完善这个博客的内容，本人现在是在校大学生一枚，接下来我谈一下今后的安排。</p>
<a id="more"></a>

<h2 id="大学生活"><a href="#大学生活" class="headerlink" title="大学生活"></a>大学生活</h2><h3 id="大三下"><a href="#大三下" class="headerlink" title="大三下"></a>大三下</h3><pre><code>要准备考研了，计算机专业，目前决定首选考自己本校。</code></pre><h3 id="研究生期间"><a href="#研究生期间" class="headerlink" title="研究生期间"></a>研究生期间</h3><pre><code>目前我想研究云计算以及AI方面，在研究生期间，我也想做一个短视频自媒体作者，分享一些自己在本专业的知识，当然，</code></pre><p>以后分享的话内容会实时更新到本博客。</p>
<h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><pre><code>研究生毕业后准备工作，从程序员做起，毕业的时候25岁，在35岁之前就达到管理层的高度，月入10w，这是我的目标。</code></pre><h2 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h2><pre><code>我喜欢健身，我希望在未来也打造一家属于自己的健身房</code></pre>]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>我的规划</tag>
      </tags>
  </entry>
</search>
